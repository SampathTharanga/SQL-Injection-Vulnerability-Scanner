import requests

def load_payloads(file_path):
    with open(file_path, 'r') as file:
        return [line.strip() for line in file]

def scan_sql_injection(domain, payloads):
    vulnerable_urls = []

    # Iterate through payloads
    for payload in payloads:
        # Construct the URL with the payload
        vulnerable_url = f"https://{domain}/page?query={payload}"

        # Send the request
        try:
            response = requests.get(vulnerable_url)

            # Check if SQL injection was successful
            if "error" in response.text:
                vulnerable_urls.append(vulnerable_url)
        except requests.exceptions.RequestException as e:
            print("Error occurred while making the request:", e)

    # Display vulnerable URLs separately
    if vulnerable_urls:
        print("Vulnerable URLs:")
        for url in vulnerable_urls:
            print(url)
    else:
        print("No SQL Injection vulnerabilities found.")

# Example usage
if __name__ == "__main__":
    target_domain = input("Enter the domain name (e.g., example.com): ").strip("/")
    payloads_file = "payloads.txt"
    payloads = load_payloads(payloads_file)
    scan_sql_injection(target_domain, payloads)
